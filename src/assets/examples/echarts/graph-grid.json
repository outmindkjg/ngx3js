{
  "title": {
    "text": "Graph on Cartesian"
  },
  "tooltip": {},
  "xAxis": {
    "type": "category",
    "boundaryGap": false,
    "data": [
      "Mon",
      "Tue",
      "Wed",
      "Very Loooong Thu",
      "Fri",
      "Sat",
      "Sun"
    ]
  },
  "yAxis": {
    "type": "value"
  },
  "series": [
    {
      "type": "graph",
      "layout": "none",
      "coordinateSystem": "cartesian2d",
      "symbolSize": 40,
      "label": {
        "show": true
      },
      "edgeSymbol": [
        "circle",
        "arrow"
      ],
      "edgeSymbolSize": [
        4,
        10
      ],
      "data": [
        858,
        437,
        1685,
        2535,
        14,
        705,
        3340
      ],
      "links": [
        {
          "source": 0,
          "target": 1
        },
        {
          "source": 1,
          "target": 2
        },
        {
          "source": 2,
          "target": 3
        },
        {
          "source": 3,
          "target": 4
        },
        {
          "source": 4,
          "target": 5
        },
        {
          "source": 5,
          "target": 6
        }
      ],
      "lineStyle": {
        "color": "#2f4554"
      }
    }
  ],
  "actions": [
    {
      "name": "Randomize",
      "handler": "(chart) => { const options = chart.getOption(); options.series.forEach((series, idx) => { series.data = Utils.numbers({ count: series.data.length, decimals: 1, min: 0, max: 3500, }); }); chart.setOption(options); }"
    },
    {
      "name": "Add Data",
      "handler": "(chart) => { const options = chart.getOption(); if (options.series.length > 0) { options.xAxis.forEach((xAxis) => { xAxis.data.push(Utils.months({ count: xAxis.data.length + 1 }).pop()); }); options.series.forEach((series, idx) => { series.data.push(Math.round(Utils.rand(0, 3500))); }); chart.setOption(options); } }"
    },
    {
      "name": "Remove Data",
      "handler": "(chart) => { const options = chart.getOption(); if (options.series.length > 0) { options.xAxis.forEach((xAxis) => { xAxis.data.splice(-1, 1); }); options.series.forEach((series) => { series.data.pop(); }); chart.setOption(options); } }"
    }
  ],
  "sharedVar": {}
}