{
  "title": {
    "text": "Bar Chart with Negative Value"
  },
  "tooltip": {
    "trigger": "axis",
    "axisPointer": {
      "type": "shadow"
    }
  },
  "grid": {
    "top": 80,
    "bottom": 30
  },
  "xAxis": {
    "type": "value",
    "position": "top",
    "splitLine": {
      "lineStyle": {
        "type": "dashed"
      }
    }
  },
  "yAxis": {
    "type": "category",
    "axisLine": {
      "show": false
    },
    "axisLabel": {
      "show": false
    },
    "axisTick": {
      "show": false
    },
    "splitLine": {
      "show": false
    },
    "data": [
      "ten",
      "nine",
      "eight",
      "seven",
      "six",
      "five",
      "four",
      "three",
      "two",
      "one"
    ]
  },
  "series": [
    {
      "name": "Cost",
      "type": "bar",
      "stack": "Total",
      "label": {
        "show": true,
        "formatter": "{b}"
      },
      "data": [
        {
          "value": -0.07,
          "label": {
            "position": "right"
          }
        },
        {
          "value": -0.09,
          "label": {
            "position": "right"
          }
        },
        0.2,
        0.44,
        {
          "value": -0.23,
          "label": {
            "position": "right"
          }
        },
        0.08,
        {
          "value": -0.17,
          "label": {
            "position": "right"
          }
        },
        0.47,
        {
          "value": -0.36,
          "label": {
            "position": "right"
          }
        },
        0.18
      ]
    }
  ],
  "actions": [
    {
      "name": "Randomize",
      "handler": "(chart) => { const options = chart.getOption();  options.series.forEach((series, idx) => { switch (idx) { case 0: series.data = Utils.numbers({ count: series.data.length, decimals: 2, min: -0.4, max: 0.6, }).map(function(value) { if (value > 0) { return value; } else { return { value: value, label: { position: 'right' } } } }); break; } }); chart.setOption(options); }"
    },
    {
      "name": "Add Data",
      "handler": "(chart) => { const options = chart.getOption(); if (options.series.length > 0) { options.yAxis.forEach((yAxis) => { yAxis.data.push(Utils.dayofweek({ count: yAxis.data.length + 1 }).pop()); }); options.series.forEach((series) => { const value = Math.round(Utils.rand(-0.4, 0.6) * 100) / 100; series.data.push(value > 0 ? value : { value: value, label: { position: 'right' } } ); }); chart.setOption(options); } }"
    },
    {
      "name": "Remove Data",
      "handler": "(chart) => { const options = chart.getOption(); if (options.series.length > 0) { options.yAxis.forEach((yAxis) => { yAxis.data.splice(-1, 1); }); options.series.forEach((series) => { series.data.pop(); }); chart.setOption(options); } }"
    }
  ],
  "sharedVar": {}
}