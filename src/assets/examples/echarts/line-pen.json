{
  "title": {
    "text": "Click to Add Points"
  },
  "tooltip": {
    "formatter": "function (params) { var data = params.data || [0, 0]; return data[0].toFixed(2) + ', ' + data[1].toFixed(2); }"
  },
  "grid": {
    "left": "3%",
    "right": "4%",
    "bottom": "3%",
    "containLabel": true
  },
  "xAxis": {
    "min": -60,
    "max": 20,
    "type": "value",
    "axisLine": {
      "onZero": false
    }
  },
  "yAxis": {
    "min": 0,
    "max": 40,
    "type": "value",
    "axisLine": {
      "onZero": false
    }
  },
  "series": [
    {
      "id": "a",
      "type": "line",
      "smooth": true,
      "symbolSize": 20,
      "data": [
        [
          15,
          0
        ],
        [
          -50,
          10
        ],
        [
          -56.5,
          20
        ],
        [
          -46.5,
          30
        ],
        [
          -22.1,
          40
        ]
      ]
    }
  ],
  "actions": [
    {
      "name": "Randomize",
      "handler": "(chart) => { const options = chart.getOption(); options.series.forEach((series, idx) => { switch (idx) { case 0: const xData = Utils.numbers({ count: series.data.length, decimals: 0, min: -60, max: 20, }); const yData = Utils.numbers({ count: series.data.length, decimals: 0, min: 0, max: 40, }); series.data = sharedVar.data = xData.map(function(x, idx) { return [x, yData[idx]]; }); break; } }); chart.setOption(options); }"
    },
    {
      "name": "Reset",
      "handler": "(chart) => { const options = chart.getOption(); options.series.forEach((series, idx) => { switch (idx) { case 0: const xData = Utils.numbers({ count: 5, decimals: 0, min: -60, max: 20, }); const yData = Utils.numbers({ count: 5, decimals: 0, min: 0, max: 40, }); series.data = sharedVar.data = xData.map(function(x, idx) { return [x, yData[idx]]; }); break; } }); chart.setOption(options); }"
    }
  ],
  "sharedVar": {
    "data": [
      [
        15,
        0
      ],
      [
        -50,
        10
      ],
      [
        -56.5,
        20
      ],
      [
        -46.5,
        30
      ],
      [
        -22.1,
        40
      ]
    ],
    "zrClick": "function (params, myChart) { var pointInPixel = [params.offsetX, params.offsetY]; var pointInGrid = myChart.convertFromPixel('grid', pointInPixel); if (myChart.containPixel('grid', pointInPixel)) { const data = sharedVar.data; data.push(pointInGrid); myChart.setOption({ series: [ { id: 'a', data: data } ] }); } }",
    "zrMousemove": "function (params, myChart) { var pointInPixel = [params.offsetX, params.offsetY]; const zr = myChart.getZr(); zr.setCursorStyle( myChart.containPixel('grid', pointInPixel) ? 'copy' : 'default' ); }"
  }
}