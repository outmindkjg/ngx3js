{
  "xAxis": {
    "type": "category",
    "boundaryGap": false
  },
  "yAxis": {
    "type": "value",
    "boundaryGap": [
      0,
      "30%"
    ]
  },
  "visualMap": {
    "type": "piecewise",
    "show": false,
    "dimension": 0,
    "seriesIndex": 0,
    "pieces": [
      {
        "gt": 1,
        "lt": 3,
        "color": "rgba(0, 0, 180, 0.4)"
      },
      {
        "gt": 5,
        "lt": 7,
        "color": "rgba(0, 0, 180, 0.4)"
      }
    ]
  },
  "series": [
    {
      "type": "line",
      "smooth": 0.6,
      "symbol": "none",
      "lineStyle": {
        "color": "#5470C6",
        "width": 5
      },
      "markLine": {
        "symbol": [
          "none",
          "none"
        ],
        "label": {
          "show": false
        },
        "data": [
          {
            "xAxis": 1
          },
          {
            "xAxis": 3
          },
          {
            "xAxis": 5
          },
          {
            "xAxis": 7
          }
        ]
      },
      "areaStyle": {},
      "data": [
        [
          "2019-10-10",
          200
        ],
        [
          "2019-10-11",
          560
        ],
        [
          "2019-10-12",
          750
        ],
        [
          "2019-10-13",
          580
        ],
        [
          "2019-10-14",
          250
        ],
        [
          "2019-10-15",
          300
        ],
        [
          "2019-10-16",
          450
        ],
        [
          "2019-10-17",
          300
        ],
        [
          "2019-10-18",
          100
        ]
      ]
    }
  ],
  "actions": [
    {
      "name": "Randomize",
      "handler": "(chart) => { const options = chart.getOption(); options.series.forEach((series) => { const data = Utils.numbers({ count : series.data.length , decimals : 0, min : 100, max : 800}); series.data.forEach((item, idx) => { item[1] = data[idx]; }) }); chart.setOption(options); }"
    },
    {
      "name": "Add Data",
      "handler": "(chart) => { const options = chart.getOption(); if (options.series.length > 0) { options.series.forEach((series) => { let lastDate = '2019-10-10'; if (series.data.length > 0) { lastDate = series.data[series.data.length - 1][0]; } series.data.push([Utils.addDate(lastDate,1) , Utils.rand(100, 800)]); }); chart.setOption(options); } }"
    },
    {
      "name": "Remove Data",
      "handler": "(chart) => { const options = chart.getOption(); if (options.series.length > 0) { options.series.forEach((series) => { series.data.pop(); }); chart.setOption(options); } }"
    }
  ],
  "sharedVar": {}
}